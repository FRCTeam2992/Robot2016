// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2992.Robot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.Victor;
import edu.wpi.first.wpilibj.VictorSP;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController RFWheel;
    public static SpeedController RMWheel;
    public static SpeedController RRWheel;
    public static SpeedController LFWheel;
    public static SpeedController LMWheel;
    public static SpeedController LRWheel;
    public static Encoder REncoder;
    public static Encoder LEncoder;
    public static AnalogGyro driveTrainGyro;
    public static Solenoid driveTrainDriveshifthighlow;
    public static SpeedController feedFeederwheel;
    public static DigitalInput FeedLimit;
    public static DigitalInput ShootReadyLeft;
    public static DigitalInput ShootReadyRight;
    public static Solenoid feedLA;
    public static Solenoid feedLB;
    public static Solenoid feedRA;
    public static Solenoid feedRB;
    public static SpeedController shooterShooterwheel;
    public static Encoder ShootEncoder;
    
    public static org.usfirst.frc2992.Robot.mhRobotDrive mhRobotDrive;
    
    public static SpeedController[] leftMotors;
    public static SpeedController[] rightMotors;
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
    	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        RFWheel = new Talon(0);
        //LiveWindow.addActuator("DriveTrain", "Right front drive wheel", (Talon) RFWheel);
        
        RMWheel = new Talon(1);
        //LiveWindow.addActuator("DriveTrain", "Right mid drive wheel", (Talon) RMWheel);
        
        RRWheel = new VictorSP(2);
        //LiveWindow.addActuator("DriveTrain", "Right rear drive wheel", (VictorSP) RRWheel);
        
        LFWheel = new Talon(3);
        //LiveWindow.addActuator("DriveTrain", "Left front drive wheel", (Talon) LFWheel;
        
        LMWheel = new Talon(4);
        //LiveWindow.addActuator("DriveTrain", "Left mid drive wheel", (Talon) LMWheel);
        
        LRWheel = new VictorSP(5);
        //LiveWindow.addActuator("DriveTrain", "Left rear drive wheel", (VictorSP) LRWheel);
        
        
        REncoder = new Encoder(0, 1, false, EncodingType.k4X);
        LiveWindow.addSensor("DriveTrain", "Right drive train encoder", REncoder);
        REncoder.setDistancePerPulse(1.0);
        REncoder.setPIDSourceType(PIDSourceType.kRate);
        
        LEncoder = new Encoder(2, 3, true, EncodingType.k4X);
        LiveWindow.addSensor("DriveTrain", "Left drive train encoder", LEncoder);
        LEncoder.setDistancePerPulse(1.0);
        LEncoder.setPIDSourceType(PIDSourceType.kRate);
        
        driveTrainGyro = new AnalogGyro(0);
        driveTrainGyro.reset();
        LiveWindow.addSensor("DriveTrain", "Gyro", driveTrainGyro);
        driveTrainGyro.setSensitivity(0.007);
        
        driveTrainDriveshifthighlow = new Solenoid(0, 0);
        LiveWindow.addActuator("DriveTrain", "Drive shift highlow", driveTrainDriveshifthighlow);
        
        feedFeederwheel = new Victor(7);
        LiveWindow.addActuator("Feed", "Feeder wheel", (Victor) feedFeederwheel);
        
        FeedLimit = new DigitalInput(6);
        LiveWindow.addSensor("Feed", "Feeder system Limit switch", FeedLimit);
        
        ShootReadyLeft = new DigitalInput(7);
        
        ShootReadyRight = new DigitalInput(8);
        
        feedLA = new Solenoid(0, 1);
        //LiveWindow.addActuator("Feed", "Duck tail updown", feedLA);
        
        feedLB = new Solenoid(0,2);
        
        feedRA = new Solenoid(0,3);
        
        feedRB = new Solenoid(0,4);
        
        shooterShooterwheel = new Talon(6);
        LiveWindow.addActuator("Shooter", "Shooter wheel", (Talon) shooterShooterwheel);
        
        ShootEncoder = new Encoder(4, 5, false, EncodingType.k4X);
        LiveWindow.addSensor("Shooter", "Shooter wheel encoder", ShootEncoder);
        ShootEncoder.setDistancePerPulse(1.0);
        ShootEncoder.setSamplesToAverage(5);
        ShootEncoder.setPIDSourceType(PIDSourceType.kRate);
       

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
        mhRobotDrive = new org.usfirst.frc2992.Robot.mhRobotDrive();
        
    }
}
